<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CML.CommonEx</name>
    </assembly>
    <members>
        <member name="T:CML.CommonEx.DataBaseEx.AccessDataBase">
            <summary>
            ACCESS 数据库操作类
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.AccessDataBase.ConnectionString">
            <summary>
            ACCESS 数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.AccessDataBase.RuntimeDepend">
            <summary>
            运行依赖
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateConnection">
            <summary>
            建立Connection对象
            </summary>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateConnection(System.String)">
            <summary>
            根据连接字符串建立Connection对象
            </summary>
            <param name="strConn">连接字符串</param>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateCommand">
            <summary>
            建立Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateDataAdapter">
            <summary>
            建立DataAdapter对象
            </summary>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateTransaction(System.Data.IDbConnection)">
            <summary>
            根据Connection建立Transaction
            </summary>
            <param name="iConn">Connection对象</param>
            <returns>Transaction对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.AccessDataBase.CreateDataParameter(System.Data.IDbCommand)">
            <summary>
            根据Command对象建立DataReader
            </summary>
            <param name="iCmd">Command对象</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.IDataBase">
            <summary>
            数据库接口
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.IDataBase.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.IDataBase.RuntimeDepend">
            <summary>
            运行依赖
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateConnection">
            <summary>
            建立Connection对象
            </summary>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateConnection(System.String)">
            <summary>
            根据连接字符串建立Connection对象
            </summary>
            <param name="strConn">连接字符串</param>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateCommand">
            <summary>
            建立Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateDataAdapter">
            <summary>
            建立DataAdapter对象
            </summary>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateTransaction(System.Data.IDbConnection)">
            <summary>
            根据Connection建立Transaction
            </summary>
            <param name="iConn">Connection对象</param>
            <returns>Transaction对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.IDataBase.CreateDataParameter(System.Data.IDbCommand)">
            <summary>
            根据Command对象建立DataReader
            </summary>
            <param name="iCmd">Command对象</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.MySqlDataBase">
            <summary>
            MYSQL 数据库操作类
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.MySqlDataBase.ConnectionString">
            <summary>
            MYSQL 数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.MySqlDataBase.RuntimeDepend">
            <summary>
            运行依赖
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateConnection">
            <summary>
            建立Connection对象
            </summary>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateConnection(System.String)">
            <summary>
            根据连接字符串建立Connection对象
            </summary>
            <param name="strConn">连接字符串</param>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateCommand">
            <summary>
            建立Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateDataAdapter">
            <summary>
            建立DataAdapter对象
            </summary>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateTransaction(System.Data.IDbConnection)">
            <summary>
            根据Connection建立Transaction
            </summary>
            <param name="iConn">Connection对象</param>
            <returns>Transaction对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.MySqlDataBase.CreateDataParameter(System.Data.IDbCommand)">
            <summary>
            根据Command对象建立DataReader
            </summary>
            <param name="iCmd">Command对象</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.OracleDataBase">
            <summary>
            ORACLE 数据库操作类
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.OracleDataBase.ConnectionString">
            <summary>
            ORACLE 数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.OracleDataBase.RuntimeDepend">
            <summary>
            运行依赖
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateConnection">
            <summary>
            建立Connection对象
            </summary>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateConnection(System.String)">
            <summary>
            根据连接字符串建立Connection对象
            </summary>
            <param name="strConn">连接字符串</param>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateCommand">
            <summary>
            建立Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateDataAdapter">
            <summary>
            建立DataAdapter对象
            </summary>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateTransaction(System.Data.IDbConnection)">
            <summary>
            根据Connection建立Transaction
            </summary>
            <param name="iConn">Connection对象</param>
            <returns>Transaction对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.OracleDataBase.CreateDataParameter(System.Data.IDbCommand)">
            <summary>
            根据Command对象建立DataReader
            </summary>
            <param name="iCmd">Command对象</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.SqlServerDataBase">
            <summary>
            SQL SERVER 数据库操作类
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.SqlServerDataBase.ConnectionString">
            <summary>
            SQL SERVER 数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.SqlServerDataBase.RuntimeDepend">
            <summary>
            运行依赖
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateConnection">
            <summary>
            建立Connection对象
            </summary>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateConnection(System.String)">
            <summary>
            根据连接字符串建立Connection对象
            </summary>
            <param name="strConn">连接字符串</param>
            <returns>Connection对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateCommand">
            <summary>
            建立Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateDataAdapter">
            <summary>
            建立DataAdapter对象
            </summary>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateTransaction(System.Data.IDbConnection)">
            <summary>
            根据Connection建立Transaction
            </summary>
            <param name="iConn">Connection对象</param>
            <returns>Transaction对象</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.SqlServerDataBase.CreateDataParameter(System.Data.IDbCommand)">
            <summary>
            根据Command对象建立DataReader
            </summary>
            <param name="iCmd">Command对象</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.EDataBaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.EDataBaseType.NONE">
            <summary>
            未选择数据库
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.EDataBaseType.MYSQL">
            <summary>
            MYSQL数据库（需要引用[MySql.Data]NuGet项目或[MySql.Data.dll]文件）
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.EDataBaseType.ORACLE">
            <summary>
            ORACLE数据库（需要引用[Oracle.ManagedDataAccess]NuGet项目或[Oracle.ManagedDataAccess.dll]文件）
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.EDataBaseType.SQLSERVER">
            <summary>
            SQL SERVER数据库
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.EDataBaseType.ACCESS">
            <summary>
            ACCESS数据库
            </summary>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.ModDataParameter">
            <summary>
            数据传输参数模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.ModDataParameter.Name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.ModDataParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.ModDataParameter.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.ModDataParameter.#ctor(System.String,System.Object,System.Data.DbType)">
            <summary>
            数据传输参数
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="type">数据类型</param>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.ModTransactionParameter">
            <summary>
            事务执行参数模型
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.ModTransactionParameter.#ctor(System.String,CML.CommonEx.DataBaseEx.ModDataParameter[])">
            <summary>
            构造函数
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="parameters">参数</param>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.ModTransactionParameter.Sql">
            <summary>
            SQL语句
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.ModTransactionParameter.Parameters">
            <summary>
            SQL语句中的参数
            </summary>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.VersionInfo">
            <summary>
            常用工具包数据库操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.DataBaseEx.DataBase">
            <summary>
            数据库功能帮助类
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.DataBase.m_iDataBase">
            <summary>
            数据库
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.DataBase.m_iConn">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.DataBase.m_iCmd">
            <summary>
            数据库执行命令
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.DataBase.m_isInitDataBase">
            <summary>
            数据库初始化标志
            </summary>
        </member>
        <member name="F:CML.CommonEx.DataBaseEx.DataBase.m_objLock">
            <summary>
            执行锁
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.DataBase.CP_ConnectionType">
            <summary>
            连接数据库类型
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.DataBase.CP_ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.DataBaseEx.DataBase.CP_IsAutoCloseConn">
            <summary>
            是否自动关闭数据库连接(默认开启自动关闭)
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.#ctor">
            <summary>
            建立数据库连接
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.#ctor(CML.CommonEx.DataBaseEx.EDataBaseType,System.String)">
            <summary>
            建立数据库连接
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_InitDataBase">
            <summary>
            初始化数据库（报错直接抛出异常，请主动捕获）
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_OpenConnect">
            <summary>
            打开数据库连接（报错直接抛出异常，请主动捕获）
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_CloseConnect">
            <summary>
            关闭数据库连接（报错直接抛出异常，请主动捕获）
            </summary>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_ExecuteQuery(System.String,CML.CommonEx.DataBaseEx.ModDataParameter[])">
            <summary>
            执行查询语句，返回DataTable（报错直接抛出异常，请主动捕获）
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="parameters">参数数组</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_ExecuteNonQuery(System.String,CML.CommonEx.DataBaseEx.ModDataParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数（报错直接抛出异常，请主动捕获）
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="parameters">参数数组</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_ExecuteTransaction(System.Collections.Generic.List{CML.CommonEx.DataBaseEx.ModTransactionParameter})">
            <summary>
            执行多条SQL语句，实现数据库事务（报错直接抛出异常，请主动捕获）
            </summary>
            <param name="lstParameters">事务执行参数</param>
            <returns>是否提交成功</returns>
        </member>
        <member name="M:CML.CommonEx.DataBaseEx.DataBase.CF_GetSingleObject(System.String,CML.CommonEx.DataBaseEx.ModDataParameter[])">
            <summary>
            执行SQL语句，返回结果集中的第一行的第一列（报错直接抛出异常，请主动捕获）
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="parameters">参数数组</param>
            <returns>结果集中的第一行的第一列</returns>
        </member>
        <member name="T:CML.CommonEx.DebugEx.FormCommonDebugModel">
            <summary>
            通用调试模块窗体
            </summary>
        </member>
        <member name="F:CML.CommonEx.DebugEx.FormCommonDebugModel.m_projectObject">
            <summary>
            项目实例
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.InitInfomation">
            <summary>
            初始化信息
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadControl(System.Data.DataTable,System.Windows.Forms.Control)">
            <summary>
            加载控件
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadField(System.String)">
            <summary>
            加载变量
            </summary>
            <param name="name">变量名称</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadProperty(System.String)">
            <summary>
            加载属性
            </summary>
            <param name="name">属性名称</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadConstructor(System.Type[])">
            <summary>
            加载构造函数
            </summary>
            <param name="type">参数类型</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadEvent(System.String)">
            <summary>
            加载事件
            </summary>
            <param name="name">事件名称</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.LoadMethod(System.String,System.Type[])">
            <summary>
            加载方法
            </summary>
            <param name="name">方法名称</param>
            <param name="type">参数类型</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.CreateFunctionString(System.Reflection.MethodInfo)">
            <summary>
            创建方法字符串
            </summary>
            <param name="methodInfo">方法信息</param>
            <returns>方法字符串</returns>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.CreateParasString(System.Reflection.ParameterInfo[],System.Type[]@)">
            <summary>
            创建参数字符串
            </summary>
            <param name="arrParaInfo">参数信息</param>
            <param name="types">参数类型</param>
            <returns>参数字符串</returns>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.SetFieldPropertyValue(System.String,System.String,System.Object)">
            <summary>
            设置变量/属性值
            </summary>
            <param name="type">变量/属性</param>
            <param name="name">参数名称</param>
            <param name="value">参数值</param>
            <returns>执行结果</returns>
        </member>
        <member name="F:CML.CommonEx.DebugEx.FormCommonDebugModel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormCommonDebugModel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CML.CommonEx.DebugEx.FormModelSelect">
            <summary>
            调试模块选择窗体
            </summary>
        </member>
        <member name="F:CML.CommonEx.DebugEx.FormModelSelect.m_lstDebugModel">
            <summary>
            模块列表
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.FormModelSelect.SelectedIndex">
            <summary>
            选择模块序号
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormModelSelect.#ctor(System.Collections.Generic.List{System.Object})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:CML.CommonEx.DebugEx.FormModelSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormModelSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.FormModelSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CML.CommonEx.DebugEx.VersionInfo">
            <summary>
            常用工具包调试工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.DebugEx.CommonDebugModel">
            <summary>
            通用调试模块
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.CommonDebugModel.ModelName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.CommonDebugModel.ModelDesc">
            <summary>
            模块描述
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.CommonDebugModel.ModelID">
            <summary>
            模块识别码
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.CommonDebugModel.ProjectObject">
            <summary>
            项目实例
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.CommonDebugModel.ExecuteDebug">
            <summary>
            执行调试
            </summary>
        </member>
        <member name="T:CML.CommonEx.DebugEx.DebugOperate">
            <summary>
            调试操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.OpenDebugDll(System.String,System.String,System.Object,System.String@)">
            <summary>
            打开调试DLL文件
            </summary>
            <param name="dllFilePath">DLL文件路径</param>
            <param name="modelID">模块识别码（留空不筛选）</param>
            <param name="projectObj">项目实例</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.GetField(System.Object,System.String)">
            <summary>
            获取变量值
            </summary>
            <param name="instance">对象实例</param>
            <param name="fieldName">变量名</param>
            <returns>变量值</returns>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.SetField(System.Object,System.String,System.Object)">
            <summary>
            设置变量值
            </summary>
            <param name="instance">对象实例</param>
            <param name="fieldName">变量名</param>
            <param name="value">变量值</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.SetField(System.Object,System.String,System.Object,System.String@)">
            <summary>
            设置变量值
            </summary>
            <param name="instance">对象实例</param>
            <param name="fieldName">变量名</param>
            <param name="value">变量值</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.GetProperty(System.Object,System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="instance">对象实例</param>
            <param name="propName">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="instance">对象实例</param>
            <param name="propName">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.SetProperty(System.Object,System.String,System.Object,System.String@)">
            <summary>
            设置属性值
            </summary>
            <param name="instance">对象实例</param>
            <param name="propName">属性名</param>
            <param name="value">属性值</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            调用动态方法
            </summary>
            <param name="instance">对象实例</param>
            <param name="methodName">方法名</param>
            <param name="parameters">调用参数</param>
        </member>
        <member name="M:CML.CommonEx.DebugEx.DebugOperate.InvokeMethod(System.Type,System.String,System.Object[])">
            <summary>
            调用静态方法
            </summary>
            <param name="type">对象类型</param>
            <param name="methodName">方法名</param>
            <param name="parameters">调用参数</param>
        </member>
        <member name="T:CML.CommonEx.DebugEx.IDebugDev">
            <summary>
            调试模块开发接口
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.IDebugDev.ModelName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.IDebugDev.ModelDesc">
            <summary>
            模块描述
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.IDebugDev.ModelID">
            <summary>
            模块识别码
            </summary>
        </member>
        <member name="P:CML.CommonEx.DebugEx.IDebugDev.ProjectObject">
            <summary>
            项目实例
            </summary>
        </member>
        <member name="M:CML.CommonEx.DebugEx.IDebugDev.ExecuteDebug">
            <summary>
            执行调试
            </summary>
        </member>
        <member name="T:CML.CommonEx.EmailEx.ModEmailInfo">
            <summary>
            邮件信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.FromEmail">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.FromName">
            <summary>
            发送者显示名称
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.ToEmail">
            <summary>
            收件者列表
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.CCEmail">
            <summary>
            抄送者列表
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.BCCEmail">
            <summary>
            密送者列表
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.Subject">
            <summary>
            邮件标题
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.Body">
            <summary>
            邮件正文
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.IsBodyHtml">
            <summary>
            邮件正文是否为HTML格式（默认为True）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.AttachmentList">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.Encoding">
            <summary>
            文本编码格式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModEmailInfo.MailPriority">
            <summary>
            邮件优先级
            </summary>
        </member>
        <member name="T:CML.CommonEx.EmailEx.ModServerInfo">
            <summary>
            发送信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModServerInfo.SmtpHost">
            <summary>
            SMTP服务器
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModServerInfo.SmtpPort">
            <summary>
            SMTP服务器端口(默认25)
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModServerInfo.SmtpUser">
            <summary>
            SMTP服务器用户名
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModServerInfo.SmtpPwd">
            <summary>
            SMTP服务器密码
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.ModServerInfo.EnableSsl">
            <summary>
            是否启用SSL加密连接（默认为False）
            </summary>
        </member>
        <member name="T:CML.CommonEx.EmailEx.VersionInfo">
            <summary>
            常用工具包Email工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.EmailEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.EmailEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.EmailEx.ExFunction.EmailOperateEF">
            <summary>
            Email操作类（扩展方法）
            </summary>
        </member>
        <member name="M:CML.CommonEx.EmailEx.ExFunction.EmailOperateEF.CF_SendEmail(CML.CommonEx.EmailEx.ModServerInfo,CML.CommonEx.EmailEx.ModEmailInfo,System.String@)">
            <summary>
            发送邮件
            </summary>
            <param name="sendInfo">发送信息</param>
            <param name="emailInfo">邮件信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EmailEx.EmailOperate">
            <summary>
            Email操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EmailEx.EmailOperate.CF_SendEmail(CML.CommonEx.EmailEx.ModServerInfo,CML.CommonEx.EmailEx.ModEmailInfo,System.String@)">
            <summary>
            发送邮件
            </summary>
            <param name="sendInfo">发送信息</param>
            <param name="emailInfo">邮件信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.EHttpSpeedUnit">
            <summary>
            传输速率单位
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.EHttpSpeedUnit.Byte">
            <summary>
            字节
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.EHttpSpeedUnit.KB">
            <summary>
            千字节（2^10 Byte）
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.EHttpSpeedUnit.MB">
            <summary>
            兆字节（2^20 Byte）
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.EHttpSpeedUnit.GB">
            <summary>
            吉字节（2^30 Byte）
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.EHttpSpeedUnit.TB">
            <summary>
            太字节（2^40 Byte）
            </summary>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.ModHttpTransSpeed">
            <summary>
            传输速率模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModHttpTransSpeed.Speed">
            <summary>
            传输速率值（数值大于0时启用）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModHttpTransSpeed.Unit">
            <summary>
            传输速率单位
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModHttpTransSpeed.Delay">
            <summary>
            传输间隔毫秒数（默认为100MS）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModHttpTransSpeed.EnableLimit">
            <summary>
            是否启用限速
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ModHttpTransSpeed.#ctor">
            <summary>
            默认构造函数（不限速）
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ModHttpTransSpeed.#ctor(System.Int32,CML.CommonEx.NetworkEx.EHttpSpeedUnit)">
            <summary>
            构造函数（默认延时100MS）
            </summary>
            <param name="speed">传输速率值（数值大于0时启用）</param>
            <param name="unit">传输速率单位</param>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ModHttpTransSpeed.#ctor(System.Int32,CML.CommonEx.NetworkEx.EHttpSpeedUnit,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="speed">传输速率值（数值大于0时启用）</param>
            <param name="unit">传输速率单位</param>
            <param name="delay">传输间隔毫秒数</param>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.ERequestMethod">
            <summary>
            HTTP请求方式
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.ERequestMethod.GET">
            <summary>
            GET方式
            </summary>
        </member>
        <member name="F:CML.CommonEx.NetworkEx.ERequestMethod.POST">
            <summary>
            POST方式
            </summary>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.ModProxy">
            <summary>
            代理模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModProxy.Enable">
            <summary>
            是否启用代理
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModProxy.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModProxy.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ModProxy.#ctor">
            <summary>
            默认构造函数（不启用代理）
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ModProxy.#ctor(System.String,System.Int32)">
            <summary>
            构造函数（启用代理）
            </summary>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.ModWebRequest">
            <summary>
            WEB请求模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.RequestUrl">
            <summary>
            请求网址
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.KeepAlive">
            <summary>
             请求完成之后是否保持连接（默认false）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.AllowAutoRedirect">
            <summary>
             允许自动重定向（默认false）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Proxy">
            <summary>
            代理（默认不开启）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.TimeOut">
            <summary>
            超时时间（毫秒，默认1000毫秒）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Method">
            <summary>
            请求方式（默认GET）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.ProtocolVersion">
            <summary>
            HTTP版本（默认Version10）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Host">
            <summary>
            HTTP的Host请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Accept">
            <summary>
            HTTP的Accept请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Referer">
            <summary>
            HTTP的Referer请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.UserAgent">
            <summary>
            HTTP的UserAgent请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.ContentType">
            <summary>
            HTTP的ContentType请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Headers">
            <summary>
            HTTP的请求头
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Cookie">
            <summary>
            Cookie字符串
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.UploadSpeed">
            <summary>
            上传限速
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.DownloadSpeed">
            <summary>
            下载限速
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.Encoding">
            <summary>
            网页编码
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.PostBytes">
            <summary>
            POST传输信息（优先级: PostBytes->PostString->PostDictionary）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.PostString">
            <summary>
            POST传输信息（优先级: PostBytes->PostString->PostDictionary）
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.ModWebRequest.PostDictionary">
            <summary>
            POST传输信息（优先级: PostBytes->PostString->PostDictionary）
            </summary>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.VersionInfo">
            <summary>
            常用工具包网络操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.NetworkEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF">
            <summary>
            网络操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.ExFunction.NetworkOperateEF.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">[OUT]响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.NetworkOperate">
            <summary>
            网络操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetHtmlCode(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取HTML代码
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>HTML代码</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_UploadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="filePath">文件路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="returnMsg">[OUT]返回消息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer@,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_DownloadFile(CML.CommonEx.NetworkEx.ModWebRequest,System.String,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="savePath">保存路径</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.NetworkOperate.CF_GetWebStream(CML.CommonEx.NetworkEx.ModWebRequest,System.Net.CookieContainer,System.Net.CookieContainer@,System.String@)">
            <summary>
            获取数据流
            </summary>
            <param name="webRequest">WEB请求信息</param>
            <param name="requestCookie">请求Cookie</param>
            <param name="responseCookie">响应Cookie</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>数据流</returns>
        </member>
        <member name="T:CML.CommonEx.NetworkEx.UserAgentHelper">
            <summary>
            UserAgent帮助类
            </summary>
        </member>
        <member name="M:CML.CommonEx.NetworkEx.UserAgentHelper.CF_GetUserAgents">
            <summary>
            获取随机UserAgent
            </summary>
            <returns>UserAgent</returns>
        </member>
        <member name="T:CML.CommonEx.PermissionControlEx.ModDiskPermission">
            <summary>
            磁盘权限模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.ModDiskPermission.VerificationContent">
            <summary>
            验证内容
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.ModDiskPermission.EnableSerialNumberControl">
            <summary>
            启用磁盘序列号控制
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.ModDiskPermission.EnableModelControl">
            <summary>
            启用磁盘型号控制
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.ModDiskPermission.EnableVolumeLabelControl">
            <summary>
            启用卷标名控制
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.ModDiskPermission.VolumeLabel">
            <summary>
            卷标名（留空为不控制）
            </summary>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.ModDiskPermission.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="verificationContent">验证内容</param>
        </member>
        <member name="T:CML.CommonEx.PermissionControlEx.VersionInfo">
            <summary>
            常用工具包权限控制工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.PermissionControlEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.PermissionControlEx.ExFunction.DiskControlEF">
            <summary>
            磁盘权限控制(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.ExFunction.DiskControlEF.CF_IsExistPermission(System.IO.DriveInfo)">
            <summary>
            检查是否设置磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.ExFunction.DiskControlEF.CF_SetPermission(System.IO.DriveInfo,CML.CommonEx.PermissionControlEx.ModDiskPermission,System.String@)">
            <summary>
            设置磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <param name="diskPermission">磁盘权限</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>设置结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.ExFunction.DiskControlEF.CF_CheckPermission(CML.CommonEx.PermissionControlEx.ModDiskPermission,System.String@)">
            <summary>
            检查磁盘权限
            </summary>
            <param name="diskPermission">磁盘权限</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.ExFunction.DiskControlEF.CF_ClearPermission(System.IO.DriveInfo,System.String@)">
            <summary>
            清除磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>清除结果</returns>
        </member>
        <member name="T:CML.CommonEx.PermissionControlEx.DiskControl">
            <summary>
            磁盘权限控制
            </summary>
        </member>
        <member name="F:CML.CommonEx.PermissionControlEx.DiskControl.m_ControlFolderPath">
            <summary>
            控制文件夹路径
            </summary>
        </member>
        <member name="F:CML.CommonEx.PermissionControlEx.DiskControl.m_ControlFilePath">
            <summary>
            控制文件路径
            </summary>
        </member>
        <member name="F:CML.CommonEx.PermissionControlEx.DiskControl.m_VolumeLabelFilePath">
            <summary>
            控制文件路径
            </summary>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.CF_IsExistPermission(System.IO.DriveInfo)">
            <summary>
            检查是否设置磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.CF_SetPermission(System.IO.DriveInfo,CML.CommonEx.PermissionControlEx.ModDiskPermission,System.String@)">
            <summary>
            设置磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <param name="diskPermission">磁盘权限</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>设置结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.CF_CheckPermission(CML.CommonEx.PermissionControlEx.ModDiskPermission,System.String@)">
            <summary>
            检查磁盘权限
            </summary>
            <param name="diskPermission">磁盘权限</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.CF_ClearPermission(System.IO.DriveInfo,System.String@)">
            <summary>
            清除磁盘权限
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>清除结果</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.GetSerialNumber(System.IO.DriveInfo)">
            <summary>
            获取磁盘序列号
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <returns>磁盘序列号</returns>
        </member>
        <member name="M:CML.CommonEx.PermissionControlEx.DiskControl.GetModel(System.IO.DriveInfo)">
            <summary>
            获取磁盘型号
            </summary>
            <param name="driveInfo">磁盘信息</param>
            <returns>磁盘型号</returns>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.ERegDomain">
            <summary>
            注册表基项静态域
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.ClassesRoot">
            <summary>
            对应于HKEY_CLASSES_ROOT主键
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.CurrentUser">
            <summary>
            对应于HKEY_CURRENT_USER主键
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.LocalMachine">
            <summary>
            对应于 HKEY_LOCAL_MACHINE主键
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.User">
            <summary>
            对应于 HKEY_USER主键
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.CurrentConfig">
            <summary>
            对应于HEKY_CURRENT_CONFIG主键
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegDomain.PerformanceData">
            <summary>
            对应于HKEY_PERFORMANCE_DATA主键
            </summary>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.ERegValueKind">
            <summary>
            注册表数据类型
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.Unknown">
            <summary>
            不受支持的注册表数据类型。
            例如，不支持 Microsoft Win32 API 注册表数据类型 REG_RESOURCE_LIST，使用此值指定
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.String">
            <summary>
            以 Null 结尾的字符串。
            此值与 Win32 API 注册表数据类型 REG_SZ 等效。
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.ExpandString">
            <summary>
            以 NULL 结尾的字符串，该字符串中包含对环境变量（如 %PATH%，当值被检索时，就会展开）的未展开的引用。
            此值与 Win32 API注册表数据类型 REG_EXPAND_SZ 等效。
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.Binary">
            <summary>
            任意格式的二进制数据。
            此值与 Win32 API 注册表数据类型 REG_BINARY 等效。
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.DWord">
            <summary>
            32 位二进制数。
            此值与 Win32 API 注册表数据类型 REG_DWORD 等效。
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.MultiString">
            <summary>
            以 NULL 结尾的字符串数组，以两个空字符结束。
            此值与 Win32 API 注册表数据类型 REG_MULTI_SZ 等效。
            </summary>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.ERegValueKind.QWord">
            <summary>
            64 位二进制数。
            此值与 Win32 API 注册表数据类型 REG_QWORD 等效。
            </summary>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.IniFile">
            <summary>
            INI文件操作基础类
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入INI文件
            </summary>
            <param name="section">节点名称[如[TypeName]]</param>
            <param name="key">键名</param>
            <param name="val">键值</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="def">键值</param>
            <param name="retVal">StringBulider对象</param>
            <param name="size">字节大小</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.GetPrivateProfileStringA(System.String,System.String,System.String,System.Byte[],System.Int32,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="def">键值</param>
            <param name="retVal">字节数组</param>
            <param name="size">字节大小</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="P:CML.CommonEx.ConfigurationEx.IniFile.CP_FilePath">
            <summary>
            INI文件路径
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">INI文件路径</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.CF_ReadSections">
            <summary>
            读取所有节点名称
            </summary>
            <returns>节点名称</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.CF_ReadKeys(System.String)">
            <summary>
            读取所有键名
            </summary>
            <param name="section">节点名称</param>
            <returns>键名</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.CF_WriteValue(System.String,System.String,System.String)">
            <summary>
            写入INI文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="value">键值</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniFile.CF_ReadValue(System.String,System.String)">
            <summary>
            读出INI文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.VersionInfo">
            <summary>
            常用工具包配置操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.ConfigurationEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ConfigurationEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ConfigurationEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.ConfigurationEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.IniOperate">
            <summary>
            INI操作帮助类
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadSections(System.String)">
            <summary>
            读取所有节点名称
            </summary>
            <param name="iniPath">文件</param>
            <returns>节点名称</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadKeys(System.String,System.String)">
            <summary>
            读取所有键名
            </summary>
            <param name="iniPath">文件</param>
            <param name="section">节点名称</param>
            <returns>键名</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadConfig(System.String,System.String,System.String,System.String)">
            <summary>
            读取配置文件
            </summary>
            <param name="iniPath">文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="defValue">默认值</param>
            <returns>读取结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadConfig``1(System.String,System.String,System.String,``0)">
            <summary>
            读取配置文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="iniPath">文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="defValue">默认值</param>
            <returns>读取结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_WriteConfig(System.String,System.String,System.String,System.String)">
            <summary>
            写配置文件
            </summary>
            <param name="iniPath">文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="strValue">键值</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_WriteConfig``1(System.String,System.String,System.String,``0)">
            <summary>
            写配置文件
            </summary>
            <param name="iniPath">文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="value">键值</param>
            <returns>执行结果</returns>
        </member>
        <member name="F:CML.CommonEx.ConfigurationEx.IniOperate.m_iniFile">
            <summary>
            INI文件操作基础类
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="iniPath">INI文件路径</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadSections">
            <summary>
            读取所有节点名称
            </summary>
            <returns>节点名称</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadKeys(System.String)">
            <summary>
            读取所有键名
            </summary>
            <param name="section">节点名称</param>
            <returns>键名</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadConfig(System.String,System.String,System.String)">
            <summary>
            读取配置文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="defValue">默认值</param>
            <returns>读取结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_ReadConfig``1(System.String,System.String,``0)">
            <summary>
            读取配置文件
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="defValue">默认值</param>
            <returns>读取结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_WriteConfig(System.String,System.String,System.String)">
            <summary>
            写配置文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="strValue">键值</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.IniOperate.CF_WriteConfig``1(System.String,System.String,``0)">
            <summary>
            写配置文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键名</param>
            <param name="value">键值</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.RegOperate">
            <summary>
            注册表操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_CreateSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            创建注册表项
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_ExistSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            检测注册表项是否存在
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <returns>注册表项存在情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_DeleteSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            删除注册表项
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <returns>执行情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_ExistRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            检测注册表键值是否存在
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>注册表键值存在情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_WriteRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String,CML.CommonEx.ConfigurationEx.ERegValueKind,System.Object)">
            <summary>
            设置指定的键值内容
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <param name="valueKind">键值类型</param>
            <param name="value">键值内容</param>
            <returns>执行情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_ReadRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            读取键值内容
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>键值内容</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.CF_DeleteRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            删除键值
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.GetRegDomain(CML.CommonEx.ConfigurationEx.ERegDomain)">
            <summary>
            获取注册表基项域对应顶级节点
            </summary>
            <param name="regDomain">注册表基项域</param>
            <returns>对应顶级节点</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.GetRegValueKind(CML.CommonEx.ConfigurationEx.ERegValueKind)">
            <summary>
            获取注册表中对应值数据类型
            </summary>
            <param name="regValueKind">注册表数据类型</param>
            <returns>对应数据类型</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.RegOperate.OpenSubKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.Boolean)">
            <summary>
            打开注册表项节点
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="isWritable">是否需要节点Write访问权限</param>
            <returns>若注册表节点存在，则返回节点，否则返回null</returns>
        </member>
        <member name="T:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF">
            <summary>
            注册表操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_CreateSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            创建注册表项
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_ExistSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            检测注册表项是否存在
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <returns>注册表项存在情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_DeleteSubItem(CML.CommonEx.ConfigurationEx.ERegDomain,System.String)">
            <summary>
            删除注册表项
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <returns>执行情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_ExistRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            检测注册表键值是否存在
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>注册表键值存在情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_WriteRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String,CML.CommonEx.ConfigurationEx.ERegValueKind,System.Object)">
            <summary>
            设置指定的键值内容
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <param name="valueKind">键值类型</param>
            <param name="value">键值内容</param>
            <returns>执行情况</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_ReadRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            读取键值内容
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>键值内容</returns>
        </member>
        <member name="M:CML.CommonEx.ConfigurationEx.ExFunction.RegOperateEF.CF_DeleteRegeditKey(CML.CommonEx.ConfigurationEx.ERegDomain,System.String,System.String)">
            <summary>
            删除键值
            </summary>
            <param name="regDomain">注册表基项域</param>
            <param name="subItem">注册表项名称</param>
            <param name="regKey">键值名称</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF">
            <summary>
            AES加密解密操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_EncryptFile(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String,System.String@)">
            <summary>
            AES加密文件
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_DecryptFile(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String,System.String@)">
            <summary>
            AES解密文件
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_EncryptString(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String@,System.String@)">
            <summary>
            AES加密字符串
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_DecryptString(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String@,System.String@)">
            <summary>
            AES解密字符串
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModAESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            AES加密字节数组
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.AESEncryptEF.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModAESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            AES解密字节数组
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF">
            <summary>
            3DES加密解密操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_EncryptFile(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String,System.String@)">
            <summary>
            3DES加密文件
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_DecryptFile(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String,System.String@)">
            <summary>
            3DES解密文件
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_EncryptString(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String@,System.String@)">
            <summary>
            3DES加密字符串
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_DecryptString(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String@,System.String@)">
            <summary>
            3DES解密字符串
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            3DES加密字节数组
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESTripleEncryptEF.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            3DES解密字节数组
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF">
            <summary>
            DES加密解密操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_EncryptFile(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String,System.String@)">
            <summary>
            DES加密文件
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_DecryptFile(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String,System.String@)">
            <summary>
            DES解密文件
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_EncryptString(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String@,System.String@)">
            <summary>
            DES加密字符串
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_DecryptString(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String@,System.String@)">
            <summary>
            DES解密字符串
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModDESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            DES加密字节数组
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.DESEncryptEF.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModDESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            DES解密字节数组
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ExFunction.MD5EncryptEF">
            <summary>
            MD5加密操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.MD5EncryptEF.CF_EncryptFile(CML.CommonEx.EncodeEx.ModMD5Parameter,System.String,System.String@,System.String@)">
            <summary>
            DES加密文件
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.MD5EncryptEF.CF_EncryptString(CML.CommonEx.EncodeEx.ModMD5Parameter,System.String,System.String@,System.String@)">
            <summary>
            16位MD5加密
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ExFunction.MD5EncryptEF.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModMD5Parameter,System.Byte[],System.String@,System.String@)">
            <summary>
            MD5加密字节数组
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.AESEncrypt">
            <summary>
            AES加密解密操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_EncryptFile(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String,System.String@)">
            <summary>
            AES加密文件
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_DecryptFile(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String,System.String@)">
            <summary>
            AES解密文件
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_EncryptString(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String@,System.String@)">
            <summary>
            AES加密字符串
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_DecryptString(CML.CommonEx.EncodeEx.ModAESParameter,System.String,System.String@,System.String@)">
            <summary>
            AES解密字符串
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModAESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            AES加密字节数组
            </summary>
            <param name="aesPara">AES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.AESEncrypt.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModAESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            AES解密字节数组
            </summary>
            <param name="aesPara">AES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ECipherMode">
            <summary>
            加密模式枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ECipherMode.CBC">
            <summary>
            密码块链模式
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ECipherMode.ECB">
            <summary>
            电子密码本模式
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ECipherMode.OFB">
            <summary>
            输出反馈模式
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ECipherMode.CFB">
            <summary>
            密码反馈模式
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ECipherMode.CTS">
            <summary>
            密码文本窃用模式
            </summary>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ECipherModeExFunction">
            <summary>
            加密模式枚举扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ECipherModeExFunction.Convert(CML.CommonEx.EncodeEx.ECipherMode)">
            <summary>
            转换类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.EMD5Length">
            <summary>
            MD5加密输出长度
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EMD5Length.L16">
            <summary>
            16位
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EMD5Length.L32">
            <summary>
            32位
            </summary>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.EPaddingMode">
            <summary>
            填充模式枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EPaddingMode.None">
            <summary>
            不填充
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EPaddingMode.PKCS7">
            <summary>
            PKCS #7 填充字符串由一个字节序列组成，每个字节填充该字节序列的长度。
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EPaddingMode.Zeros">
            <summary>
            填充字符串由设置为零的字节组成。
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EPaddingMode.ANSIX923">
            <summary>
            ANSIX923 填充字符串由一个字节序列组成，此字节序列的最后一个字节填充字节序列的长度，其余字节均填充数字零。
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.EPaddingMode.ISO10126">
            <summary>
            ISO10126 填充字符串由一个字节序列组成，此字节序列的最后一个字节填充字节序列的长度，其余字节填充随机数据。
            </summary>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.EPaddingModeExFunction">
            <summary>
            填充模式枚举扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.EPaddingModeExFunction.Convert(CML.CommonEx.EncodeEx.EPaddingMode)">
            <summary>
            转换类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ModAESParameter">
            <summary>
            AES参数模型
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModAESParameter.key">
            <summary>
            密钥存储
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModAESParameter.iv">
            <summary>
            向量存储
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.IV">
            <summary>
            向量
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.CipherMode">
            <summary>
            加密模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.PaddingMode">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.Encode">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.KeySize">
            <summary>
            获取或设置对称算法所用密钥的大小（以位为单位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.BlockSize">
            <summary>
            获取或设置加密操作的块大小（以位为单位）。
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModAESParameter.FeedbackSize">
            <summary>
            获取或设置加密操作的反馈大小（以位为单位）
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModAESParameter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModAESParameter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥（16位）</param>
            <param name="iv">向量（16位）</param>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ModDESTripleParameter">
            <summary>
            3DES参数模型
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModDESTripleParameter.key">
            <summary>
            密钥存储
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModDESTripleParameter.iv">
            <summary>
            向量存储
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.Key">
            <summary>
            密钥（24位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.IV">
            <summary>
            向量（8位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.PaddingChar">
            <summary>
            填充字符
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.CipherMode">
            <summary>
            加密模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.PaddingMode">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESTripleParameter.Encode">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModDESTripleParameter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModDESTripleParameter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥（24位）</param>
            <param name="iv">向量（8位）</param>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ModDESParameter">
            <summary>
            DES参数模型
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModDESParameter.key">
            <summary>
            密钥存储
            </summary>
        </member>
        <member name="F:CML.CommonEx.EncodeEx.ModDESParameter.iv">
            <summary>
            向量存储
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.Key">
            <summary>
            密钥（8位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.IV">
            <summary>
            向量（8位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.PaddingChar">
            <summary>
            填充字符
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.CipherMode">
            <summary>
            加密模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.PaddingMode">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModDESParameter.Encode">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModDESParameter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.ModDESParameter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥（8位）</param>
            <param name="iv">向量（8位）</param>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.ModMD5Parameter">
            <summary>
            MD5参数模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModMD5Parameter.MD5Length">
            <summary>
            输出长度（默认32位）
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModMD5Parameter.IsUppercase">
            <summary>
            大写输出
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.ModMD5Parameter.Encode">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.VersionInfo">
            <summary>
            常用工具包数据编码工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.EncodeEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.DESEncrypt">
            <summary>
            DES加密解密操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_EncryptFile(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String,System.String@)">
            <summary>
            DES加密文件
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_DecryptFile(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String,System.String@)">
            <summary>
            DES解密文件
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_EncryptString(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String@,System.String@)">
            <summary>
            DES加密字符串
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_DecryptString(CML.CommonEx.EncodeEx.ModDESParameter,System.String,System.String@,System.String@)">
            <summary>
            DES解密字符串
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModDESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            DES加密字节数组
            </summary>
            <param name="desPara">DES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESEncrypt.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModDESParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            DES解密字节数组
            </summary>
            <param name="desPara">DES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.DESTripleEncrypt">
            <summary>
            3DES加密解密操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_EncryptFile(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String,System.String@)">
            <summary>
            3DES加密文件
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outFilePath">[OUT]已加密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_DecryptFile(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String,System.String@)">
            <summary>
            3DES解密文件
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inFilePath">待解密文件路径</param>
            <param name="outFilePath">[OUT]已解密文件存储路径</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_EncryptString(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String@,System.String@)">
            <summary>
            3DES加密字符串
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_DecryptString(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.String,System.String@,System.String@)">
            <summary>
            3DES解密字符串
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inString">待解密字符串</param>
            <param name="outString">[OUT]已解密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            3DES加密字节数组
            </summary>
            <param name="desPara">3DES加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outBytes">[OUT]已加密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.DESTripleEncrypt.CF_DecryptBytes(CML.CommonEx.EncodeEx.ModDESTripleParameter,System.Byte[],System.Byte[]@,System.String@)">
            <summary>
            3DES解密字节数组
            </summary>
            <param name="desPara">3DES解密参数</param>
            <param name="inBytes">待解密字节数组</param>
            <param name="outBytes">[OUT]已解密字节数组</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EncodeEx.MD5Encrypt">
            <summary>
            MD5加密操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.MD5Encrypt.CF_EncryptFile(CML.CommonEx.EncodeEx.ModMD5Parameter,System.String,System.String@,System.String@)">
            <summary>
            DES加密文件
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inFilePath">待加密文件路径</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.MD5Encrypt.CF_EncryptString(CML.CommonEx.EncodeEx.ModMD5Parameter,System.String,System.String@,System.String@)">
            <summary>
            16位MD5加密
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inString">待加密字符串</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EncodeEx.MD5Encrypt.CF_EncryptBytes(CML.CommonEx.EncodeEx.ModMD5Parameter,System.Byte[],System.String@,System.String@)">
            <summary>
            MD5加密字节数组
            </summary>
            <param name="md5Para">MD5加密参数</param>
            <param name="inBytes">待加密字节数组</param>
            <param name="outString">[OUT]已加密字符串</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:CML.CommonEx.EnumEx.VersionInfo">
            <summary>
            常用工具包枚举操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EnumEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EnumEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EnumEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.EnumEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.EnumEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.EnumEx.EnumOperate">
            <summary>
            枚举操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.EnumEx.EnumOperate.CF_GetDescription(System.Enum)">
            <summary>
            获取枚举的描述
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="M:CML.CommonEx.EnumEx.EnumOperate.CF_ToNumber(System.Enum)">
            <summary>
            枚举转数值
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="M:CML.CommonEx.EnumEx.EnumOperate.CF_ToString(System.Enum)">
            <summary>
            枚举转字符串
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="T:CML.CommonEx.EnumEx.ExFunction.EnumOperateEF">
            <summary>
            枚举操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.EnumEx.ExFunction.EnumOperateEF.CF_GetDescription(System.Enum)">
            <summary>
            获取枚举的描述
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="M:CML.CommonEx.EnumEx.ExFunction.EnumOperateEF.CF_ToNumber(System.Enum)">
            <summary>
            枚举转数值
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="M:CML.CommonEx.EnumEx.ExFunction.EnumOperateEF.CF_ToString(System.Enum)">
            <summary>
            枚举转字符串
            </summary>
            <param name="en">枚举</param>
            <returns>返回枚举的描述</returns>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.EExecuteError">
            <summary>
            执行错误枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.OK">
            <summary>
            执行成功
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.MEMORY">
            <summary>
            内存分配错误
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.IPC">
            <summary>
            IPC不可用或Everything未启动
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.REGISTERCLASSEX">
            <summary>
            注册搜索查询窗口类失败
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.CREATEWINDOW">
            <summary>
            创建搜索查询窗口失败
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.CREATETHREAD">
            <summary>
            创建搜索查询线程失败
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.INVALIDINDEX">
            <summary>
            索引无效
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EExecuteError.INVALIDCALL">
            <summary>
            调用无效
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.EFileAttribute">
            <summary>
            文件属性枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.READONLY">
            <summary>
            只读
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.HIDDEN">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.SYSTEM">
            <summary>
            系统
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.DIRECTORY">
            <summary>
            文件夹
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.ARCHIVE">
            <summary>
            存档
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.DEVICE">
            <summary>
            This value is reserved for system use.
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.NORMAL">
            <summary>
            未设置其他属性
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.TEMPORARY">
            <summary>
            临时存储文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.SPARSE_FILE">
            <summary>
            稀疏文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.REPARSE_POINT">
            <summary>
            A file or directory that has an associated reparse point, or a file that is a symbolic link.
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.COMPRESSED">
            <summary>
            压缩
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.OFFLINE">
            <summary>
            离线
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.NOT_CONTENT_INDEXED">
            <summary>
            内容索引服务不为该文件或目录编制索引
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.ENCRYPTED">
            <summary>
            加密
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.INTEGRITY_STREAM">
            <summary>
            The directory or user data stream is configured with integrity (only supported on ReFS volumes).
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.VIRTUAL">
            <summary>
            This value is reserved for system use.
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.NO_SCRUB_DATA">
            <summary>
            The user data stream not to be read by the background data integrity scanner (AKA scrubber). 
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.RECALL_ON_OPEN">
            <summary>
            This attribute only appears in directory enumeration classes (FILE_DIRECTORY_INFORMATION, FILE_BOTH_DIR_INFORMATION, etc.).
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EFileAttribute.RECALL_ON_DATA_ACCESS">
            <summary>
            When this attribute is set, it means that the file or directory is not fully present locally. 
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.EPlatform">
            <summary>
            系统平台枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EPlatform.X86">
            <summary>
            32位
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.EPlatform.X64">
            <summary>
            64位
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.ERequest">
            <summary>
            请求内容枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.FILE_NAME">
            <summary>
            文件名
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.PATH">
            <summary>
            路径
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.FULL_PATH_AND_FILE_NAME">
            <summary>
            完整路径与文件名
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.EXTENSION">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.SIZE">
            <summary>
            文件大小（文件夹为-1）
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.DATE_CREATED">
            <summary>
            创建日期
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.DATE_MODIFIED">
            <summary>
            修改日期
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.DATE_ACCESSED">
            <summary>
            访问日期
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.ATTRIBUTES">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.FILE_LIST_FILE_NAME">
            <summary>
            完整路径和文件名
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.RUN_COUNT">
            <summary>
            运行次数
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.DATE_RUN">
            <summary>
            运行日期
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.DATE_RECENTLY_CHANGED">
            <summary>
            最近修改日期
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.HIGHLIGHTED_FILE_NAME">
            <summary>
            高亮的文件名
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.HIGHLIGHTED_PATH">
            <summary>
            高亮的路径
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ERequest.HIGHLIGHTED_FULL_PATH_AND_FILE_NAME">
            <summary>
            高亮的完整路径与文件名
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.ESortMode">
            <summary>
            排序方式枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.NAME_ASCENDING">
            <summary>
            名称升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.NAME_DESCENDING">
            <summary>
            名称降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.PATH_ASCENDING">
            <summary>
            路径升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.PATH_DESCENDING">
            <summary>
            路径降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.SIZE_ASCENDING">
            <summary>
            文件大小升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.SIZE_DESCENDING">
            <summary>
            文件大小降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.EXTENSION_ASCENDING">
            <summary>
            后缀名升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.EXTENSION_DESCENDING">
            <summary>
            后缀名降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.TYPE_NAME_ASCENDING">
            <summary>
            类型名称升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.TYPE_NAME_DESCENDING">
            <summary>
            类型名称降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_CREATED_ASCENDING">
            <summary>
            创建日期升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_CREATED_DESCENDING">
            <summary>
            创建日期降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_MODIFIED_ASCENDING">
            <summary>
            修改日期升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_MODIFIED_DESCENDING">
            <summary>
            修改日期降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.ATTRIBUTES_ASCENDING">
            <summary>
            属性升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.ATTRIBUTES_DESCENDING">
            <summary>
            属性降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.FILE_LIST_FILENAME_ASCENDING">
            <summary>
            文件列表和文件名升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.FILE_LIST_FILENAME_DESCENDING">
            <summary>
            文件列表和文件名降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.RUN_COUNT_ASCENDING">
            <summary>
            运行次数升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.RUN_COUNT_DESCENDING">
            <summary>
            运行次数降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_RECENTLY_CHANGED_ASCENDING">
            <summary>
            最近修改日期升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_RECENTLY_CHANGED_DESCENDING">
            <summary>
            最近修改日期降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_ACCESSED_ASCENDING">
            <summary>
            访问日期升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_ACCESSED_DESCENDING">
            <summary>
            访问日期降序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_RUN_ASCENDING">
            <summary>
            运行日期升序排列
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ESortMode.DATE_RUN_DESCENDING">
            <summary>
            运行日期降序排列
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.ETarget">
            <summary>
            系统平台枚举
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ETarget.X86">
            <summary>
            32位
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ETarget.X64">
            <summary>
            64位
            </summary>
        </member>
        <member name="F:CML.CommonEx.EverythingEx.ETarget.ARM">
            <summary>
            ARM
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.ModEverything64">
            <summary>
            64位外部方法引用
            </summary>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.VersionInfo">
            <summary>
            常用工具包Everything搜索工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.EverythingEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EverythingEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.EverythingEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.EverythingEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.EverythingEx.EverythingOperate">
            <summary>
            Everything软件搜索操作类
            需要[Everything32.dll/Everything64.dll]文件
            需要运行[Everything]软件
            </summary>
        </member>
        <member name="P:CML.CommonEx.EverythingEx.EverythingOperate.CP_Platform">
            <summary>
            软件平台（默认32位）
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_DetectPlatform">
            <summary>
            自动检测软件平台
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsAdmin">
            <summary>
            判断Everything软件是否以管理员身份启动
            </summary>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsAppData">
            <summary>
            判断Everything软件配置文件是否保存在AppData文件夹（否则与软件同文件夹）
            </summary>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsDBLoaded">
            <summary>
            判断Everything软件数据库是否加载完成
            </summary>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMajorVersion">
            <summary>
            获取Everything软件主版本号
            </summary>
            <returns>主版本号</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMinorVersion">
            <summary>
            获取Everything软件次版本号
            </summary>
            <returns>次版本号</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetRevision">
            <summary>
            获取Everything软件修订号
            </summary>
            <returns>修订号</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetBuildNumber">
            <summary>
            获取Everything软件内部版本号
            </summary>
            <returns>内部版本号</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetTargetMachine">
            <summary>
            获取Everything软件运行平台类型
            </summary>
            <returns>平台类型</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_Exit">
            <summary>
            退出Everything软件
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SaveDB">
            <summary>
            保存Everything软件索引数据库
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_RebuildDB">
            <summary>
            强制重建Everything软件数据库索引
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_UpdateAllFolderIndexes">
            <summary>
            重新扫描所有文件夹索引
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SaveRunHistory">
            <summary>
            保存Everything软件运行记录
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_DeleteRunHistory">
            <summary>
            删除Everything软件运行记录
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetLastError">
            <summary>
            获取最后一次错误信息
            </summary>
            <returns>错误信息</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetSearch(System.String)">
            <summary>
            设置搜索字符串
            </summary>
            <param name="lpSearchString">搜索字符串</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetSearch">
            <summary>
            获取搜索字符串
            </summary>
            <returns>搜索字符串</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetMatchPath(System.Boolean)">
            <summary>
            启用或禁用全路径匹配
            </summary>
            <param name="bEnable">全路径匹配状态</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMatchPath">
            <summary>
            获取全路径匹配状态
            </summary>
            <returns>全路径匹配状态</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetMatchCase(System.Boolean)">
            <summary>
            启用或禁用字母大小写匹配
            </summary>
            <param name="bEnable">字母大小写匹配状态</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMatchCase">
            <summary>
            获取字母大小写匹配状态
            </summary>
            <returns>字母大小写匹配状态</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetMatchWholeWord(System.Boolean)">
            <summary>
            启用或禁用全字匹配
            </summary>
            <param name="bEnable">全字匹配状态</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMatchWholeWord">
            <summary>
            获取全字匹配状态
            </summary>
            <returns>全字匹配状态</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetRegex(System.Boolean)">
            <summary>
            启用或禁用正则表达式匹配
            </summary>
            <param name="bEnable">正则表达式匹配状态</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetRegex">
            <summary>
            获取正则表达式匹配状态
            </summary>
            <returns>正则表达式匹配状态</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetMax(System.UInt32)">
            <summary>
            设置结果返回最大数量
            </summary>
            <param name="dwMax">最大数量（设置0xFFFFFFFF返回所有结果）</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetMax">
            <summary>
            获取结果返回最大数量
            </summary>
            <returns>结果返回最大数量（0xFFFFFFFF为所有结果）</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetOffset(System.UInt32)">
            <summary>
            设置结果返回偏移量
            </summary>
            <param name="dwOffset">偏移量（设置0从第一条开始返回）</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetOffset">
            <summary>
            获取结果返回偏移量
            </summary>
            <returns>结果返回偏移量（0为从第一条开始返回）</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_Query(System.Boolean)">
            <summary>
            执行搜索
            </summary>
            <param name="bWait">是否等待搜索结束</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SortResultsByPath">
            <summary>
            根据路径与文件名对当前结果进行排序
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_Reset">
            <summary>
            重置结果列表和搜索状态到默认状态，释放分配的内存
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_CleanUp">
            <summary>
            重置结果列表和搜索状态，释放分配的内存
            </summary>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetSort(CML.CommonEx.EverythingEx.ESortMode)">
            <summary>
            设置结果的排序方式
            </summary>
            <param name="eSortType">排序方式</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetSort">
            <summary>
            获取结果的排序方式
            </summary>
            <returns>排序方式</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultListSort">
            <summary>
            获取结果的实际排序顺序
            </summary>
            <returns>排序顺序</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetRequestFlags(CML.CommonEx.EverythingEx.ERequest)">
            <summary>
            设置所需的结果数据类型
            </summary>
            <param name="eRequestFlags">数据类型</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetRequestFlags">
            <summary>
            获取所需的结果数据类型
            </summary>
            <returns>数据类型</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultListRequestFlags">
            <summary>
            获取可用结果数据类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetNumFileResults">
            <summary>
            获取可见文件结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetNumFolderResults">
            <summary>
            获取可见文件夹结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetNumResults">
            <summary>
            获取可见结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetTotFileResults">
            <summary>
            获取所有文件结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetTotFolderResults">
            <summary>
            获取所有文件夹结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetTotResults">
            <summary>
            获取所有结果数量
            </summary>
            <returns>结果数量</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsVolumeResult(System.UInt32)">
            <summary>
            判断指定可见结果是否为磁盘根目录（如C:）
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsFolderResult(System.UInt32)">
            <summary>
            判断指定可见结果是否为目录
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsFileResult(System.UInt32)">
            <summary>
            判断指定可见结果是否为文件
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultFullPathName(System.UInt32,System.UInt32)">
            <summary>
            获取结果完整路径（包括文件名）
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="nMaxCount">缓冲区最大字符数</param>
            <returns>完整路径</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultPath(System.UInt32)">
            <summary>
            获得结果路径
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>路径</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultFileName(System.UInt32)">
            <summary>
            获得结果文件名
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>文件名</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultExtension(System.UInt32)">
            <summary>
            获取结果后缀名
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>后缀名</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultSize(System.UInt32,System.Int64@)">
            <summary>
            获取文件大小（Byte）
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="lpFileSize">文件大小</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultDateCreated(System.UInt32,System.DateTime@)">
            <summary>
            获取创建时间
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="dtFileTime">创建时间</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultDateModified(System.UInt32,System.DateTime@)">
            <summary>
            获取修改时间
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="dtFileTime">修改时间</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultDateAccessed(System.UInt32,System.DateTime@)">
            <summary>
            获取访问时间
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="dtFileTime">访问时间</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultAttributes(System.UInt32)">
            <summary>
            获取属性
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>属性</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultFileListFileName(System.UInt32)">
            <summary>
            获取完整路径和文件名
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>路径和文件名</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultRunCount(System.UInt32)">
            <summary>
            获取运行次数
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>运行次数</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultDateRun(System.UInt32,System.DateTime@)">
            <summary>
            获取运行时间
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="dtFileTime">运行时间</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultDateRecentlyChanged(System.UInt32,System.DateTime@)">
            <summary>
            获取最近修改时间
            </summary>
            <param name="nIndex">结果序号</param>
            <param name="dtFileTime">修改时间</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultHighlightedFileName(System.UInt32)">
            <summary>
            获取高亮的文件名
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>高亮的文件名</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultHighlightedPath(System.UInt32)">
            <summary>
            获取高亮的路径
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>高亮的路径</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetResultHighlightedFullPathAndFileName(System.UInt32)">
            <summary>
            获取高亮的完整路径与文件名
            </summary>
            <param name="nIndex">结果序号</param>
            <returns>高亮的完整路径与文件名</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetRunCountFromFileName(System.String)">
            <summary>
            获取文件运行次数
            </summary>
            <param name="lpFileName">完整路径</param>
            <returns>运行次数</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetRunCountFromFileName(System.String,System.UInt32)">
            <summary>
            获取文件运行次数
            </summary>
            <param name="lpFileName">完整路径</param>
            <param name="dwRunCount">运行次数</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IncRunCountFromFileName(System.String)">
            <summary>
            增加指定文件的运行计数一次
            </summary>
            <param name="lpFileName">完整路径</param>
            <returns>运行次数</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetReplyID(System.UInt32)">
            <summary>
            设置下次搜索的唯一编号
            </summary>
            <param name="nId">编号</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetReplyID">
            <summary>
            获取下次搜索的唯一编号
            </summary>
            <returns>编号</returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_SetReplyWindow(System.IntPtr)">
            <summary>
            设置下次搜索的窗体句柄
            </summary>
            <param name="hWnd">窗体句柄</param>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_GetReplyWindow">
            <summary>
            获取下次搜索的窗体句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.EverythingEx.EverythingOperate.CF_IsQueryReply(System.UInt32,System.UInt64,System.Int64,System.UInt32)">
            <summary>
            检测指定的窗口消息是否为查询答复
            </summary>
            <param name="message">消息标识符</param>
            <param name="wParam">消息的其他消息</param>
            <param name="lParam">消息的其他消息</param>
            <param name="nId">内容标识符</param>
            <returns>检测结果</returns>
        </member>
        <member name="T:CML.CommonEx.FTPEx.EExistence">
            <summary>
            存在情况
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EExistence.Error">
            <summary>
            执行错误
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EExistence.NotExist">
            <summary>
            不存在
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EExistence.Exist">
            <summary>
            存在
            </summary>
        </member>
        <member name="T:CML.CommonEx.FTPEx.EFtpRequestMethod">
            <summary>
            FTP请求方式
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.AppendFile">
            <summary>
            将文件追加到现有文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.DeleteFile">
            <summary>
            删除文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.DownloadFile">
            <summary>
            下载文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.GetDateTimestamp">
            <summary>
            获取文件时间戳
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.GetFileSize">
            <summary>
            获得文件大小
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.ListDirectory">
            <summary>
            枚举目录文件简要信息
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.ListDirectoryDetails">
            <summary>
            枚举目录文件详细信息
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.MakeDirectory">
            <summary>
            创建文件夹
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.PrintWorkingDirectory">
            <summary>
            打印当前工作目录名称
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.RemoveDirectory">
            <summary>
            删除文件夹
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.Rename">
            <summary>
            重命名目录
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.UploadFile">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpRequestMethod.UploadFileWithUniqueName">
            <summary>
            上传唯一名称的文件
            </summary>
        </member>
        <member name="T:CML.CommonEx.FTPEx.EFtpRequestMethodExFunction">
            <summary>
            FTP请求方式扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.EFtpRequestMethodExFunction.GetProtocol(CML.CommonEx.FTPEx.EFtpRequestMethod)">
            <summary>
            取得协议字符串
            </summary>
            <param name="ftpRequestMethod"></param>
            <returns>协议字符串</returns>
        </member>
        <member name="T:CML.CommonEx.FTPEx.EFtpSpeedUnit">
            <summary>
            传输速率单位
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpSpeedUnit.Byte">
            <summary>
            字节
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpSpeedUnit.KB">
            <summary>
            千字节（2^10 Byte）
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.EFtpSpeedUnit.MB">
            <summary>
            兆字节（2^20 Byte）
            </summary>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModFileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFileInfo.IsDirectory">
            <summary>
            是否为文件夹
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFileInfo.Name">
            <summary>
            文件（夹）名称
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFileInfo.Length">
            <summary>
            文件大小（文件夹为空）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFileInfo.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFileInfo.Path">
            <summary>
            文件（夹）路径
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFileInfo.#ctor(System.Boolean,System.String,System.Int64,System.DateTime,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="isDirectory">是否为文件夹</param>
            <param name="name">文件（夹）名称</param>
            <param name="length">文件大小（文件夹为0）</param>
            <param name="createTime">创建时间</param>
            <param name="path">文件（夹）路径</param>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModFtpReqInfo">
            <summary>
            FTP请求信息模型
            </summary>
        </member>
        <member name="F:CML.CommonEx.FTPEx.ModFtpReqInfo.m_bakRequestPath">
            <summary>
            备份的请求路径
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpReqInfo.RequestPath">
            <summary>
            请求路径（默认为根目录）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpReqInfo.Method">
            <summary>
            请求方式（默认ListDirectory）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpReqInfo.RenameTo">
            <summary>
            目标文件名（重命名时使用）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpReqInfo.UploadSpeed">
            <summary>
            上传限速（上传时使用）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpReqInfo.DownloadSpeed">
            <summary>
            下载限速（下载时使用）
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.#ctor">
            <summary>
            构造函数（默认构造）
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="requestPath">请求路径</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.#ctor(CML.CommonEx.FTPEx.EFtpRequestMethod)">
            <summary>
            构造函数
            </summary>
            <param name="method">请求方式</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.#ctor(System.String,CML.CommonEx.FTPEx.EFtpRequestMethod)">
            <summary>
            构造函数
            </summary>
            <param name="requestPath">请求路径</param>
            <param name="method">请求方式</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.CF_PushRequestPath">
            <summary>
            备份请求路径
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpReqInfo.CF_PopRequestPath">
            <summary>
            还原请求路径
            </summary>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModFtpInfomation">
            <summary>
            FTP信息模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.IP">
            <summary>
            服务器IP
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.Port">
            <summary>
            服务端口
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.FtpReqInfo">
            <summary>
            FTP请求信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpInfomation.FtpExtendInfo">
            <summary>
            FTP扩展信息
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpInfomation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ip">服务器IP</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpInfomation.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">服务器IP</param>
            <param name="port">服务端口</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpInfomation.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ip">服务器IP</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpInfomation.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ip">服务器IP</param>
            <param name="port">服务端口</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModelFtpBaseInfoExFunction">
            <summary>
            FTP基本信息扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModelFtpBaseInfoExFunction.GetCurrentName(CML.CommonEx.FTPEx.ModFtpInfomation)">
            <summary>
            获取当前文件（夹）名称
            </summary>
            <param name="ftpInfomation">FTP基本信息</param>
            <returns>URL地址</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModelFtpBaseInfoExFunction.GetParentPath(CML.CommonEx.FTPEx.ModFtpInfomation)">
            <summary>
            获取父路径（/{RequestPath}/../）
            </summary>
            <param name="ftpInfomation">FTP基本信息</param>
            <returns>URL地址</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModelFtpBaseInfoExFunction.GetCombinePath(CML.CommonEx.FTPEx.ModFtpInfomation,System.String)">
            <summary>
            获取合并地址（/{RequestPath}/{path}）
            </summary>
            <param name="ftpInfomation">FTP基本信息</param>
            <param name="path">子路径</param>
            <returns>URL地址</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModelFtpBaseInfoExFunction.GetUrl(CML.CommonEx.FTPEx.ModFtpInfomation)">
            <summary>
            获取URL地址（ftp://{IP}:{Port}/{RequestPath}）
            </summary>
            <param name="ftpInfomation">FTP基本信息</param>
            <returns>URL地址</returns>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModFtpExtendInfo">
            <summary>
            FTP扩展信息模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.Timeout">
            <summary>
            请求超时（毫秒，默认5秒）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.ReadWriteTimeout">
            <summary>
            读写超时（毫秒，默认5秒）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.EnableSsl">
            <summary>
            是否启用SSL连接（默认false）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.UseBinary">
            <summary>
            是否启用二进制传输（默认true）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.UsePassive">
            <summary>
            是否为被动模式请求（默认false）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.KeepAlive">
            <summary>
            请求完成之后是否保持连接（默认false）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpExtendInfo.Proxy">
            <summary>
            代理（默认不开启）
            </summary>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModProxy">
            <summary>
            代理模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModProxy.Enable">
            <summary>
            是否启用代理
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModProxy.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModProxy.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModProxy.#ctor">
            <summary>
            默认构造函数（不启用代理）
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModProxy.#ctor(System.String,System.Int32)">
            <summary>
            构造函数（启用代理）
            </summary>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ModFtpTransSpeed">
            <summary>
            传输速率模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpTransSpeed.Speed">
            <summary>
            传输速率值（数值大于0时启用）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpTransSpeed.Unit">
            <summary>
            传输速率单位
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpTransSpeed.Delay">
            <summary>
            传输间隔毫秒数（默认为100MS）
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.ModFtpTransSpeed.EnableLimit">
            <summary>
            是否启用限速
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpTransSpeed.#ctor">
            <summary>
            默认构造函数（不限速）
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpTransSpeed.#ctor(System.Int32,CML.CommonEx.FTPEx.EFtpSpeedUnit)">
            <summary>
            构造函数（默认延时100MS）
            </summary>
            <param name="speed">传输速率值（数值大于0时启用）</param>
            <param name="unit">传输速率单位</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ModFtpTransSpeed.#ctor(System.Int32,CML.CommonEx.FTPEx.EFtpSpeedUnit,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="speed">传输速率值（数值大于0时启用）</param>
            <param name="unit">传输速率单位</param>
            <param name="delay">传输间隔毫秒数</param>
        </member>
        <member name="T:CML.CommonEx.FTPEx.VersionInfo">
            <summary>
            常用工具包FTP工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.FTPEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF">
            <summary>
            FTP操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_CanConnect(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测能否连接服务器
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（根目录）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_IsExistFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测文件是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（检测文件路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_IsExistDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测文件夹是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（检测文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_IsExist(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件（夹）是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="tarName">检测文件（夹）名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_IsExistFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">检测文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_IsExistDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件夹是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">检测文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_UploadFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（目标文件路径）</param>
            <param name="fileName">FTP文件名</param>
            <param name="filePath">本地文件路径</param>
            <param name="overwrite">是否覆盖文件</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_DownloadFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="fileName">FTP文件名</param>
            <param name="filePath">本地文件路径</param>
            <param name="overwrite">是否覆盖文件</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_DeleteFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            删除文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>删除情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_DeleteDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            删除文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>删除情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_RenameFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.String@)">
            <summary>
            重命名文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="orgFileName">原始文件名</param>
            <param name="tarFileName">目标文件名</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>重命名情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_RenameDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.String@)">
            <summary>
            重命名文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="orgDirName">原始文件夹名</param>
            <param name="tarDirName">目标文件夹名</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>重命名情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_MakeDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            创建文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetFileSize(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            获取文件大小
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件夹列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件夹列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetFileAndDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件和文件夹列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件和文件夹列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetFtpResponse(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取FTP请求响应
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>FTP请求响应</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.ExFunction.FTPOperateEF.CF_GetFtpRequest(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取FTP请求
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>FTP请求</returns>
        </member>
        <member name="T:CML.CommonEx.FTPEx.FTPOperate">
            <summary>
            FTP操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_CanConnect(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测能否连接服务器
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（根目录）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_IsExistFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测文件是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（检测文件路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_IsExistDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            检测文件夹是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（检测文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_IsExist(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件（夹）是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="tarName">检测文件（夹）名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_IsExistFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">检测文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_IsExistDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            检测文件夹是否存在
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">检测文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>检测情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_UploadFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（目标文件路径）</param>
            <param name="fileName">FTP文件名</param>
            <param name="filePath">本地文件路径</param>
            <param name="overwrite">是否覆盖文件</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_DownloadFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="fileName">FTP文件名</param>
            <param name="filePath">本地文件路径</param>
            <param name="overwrite">是否覆盖文件</param>
            <param name="errMsg">[OUT]错误信息</param>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_DeleteFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            删除文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>删除情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_DeleteDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            删除文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>删除情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_RenameFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.String@)">
            <summary>
            重命名文件
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="orgFileName">原始文件名</param>
            <param name="tarFileName">目标文件名</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>重命名情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_RenameDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String,System.String@)">
            <summary>
            重命名文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="orgDirName">原始文件夹名</param>
            <param name="tarDirName">目标文件夹名</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>重命名情况</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_MakeDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            创建文件夹
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="dirName">文件夹名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetFileSize(CML.CommonEx.FTPEx.ModFtpInfomation,System.String,System.String@)">
            <summary>
            获取文件大小
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（父文件夹路径）</param>
            <param name="fileName">文件名称</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件夹列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件夹列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetFile(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetFileAndDirectory(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取文件和文件夹列表
            </summary>
            <param name="ftpInfomation">FTP基本信息模型（文件夹路径）</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>文件和文件夹列表</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetFtpResponse(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取FTP请求响应
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>FTP请求响应</returns>
        </member>
        <member name="M:CML.CommonEx.FTPEx.FTPOperate.CF_GetFtpRequest(CML.CommonEx.FTPEx.ModFtpInfomation,System.String@)">
            <summary>
            获取FTP请求
            </summary>
            <param name="ftpInfomation">FTP基本信息模型</param>
            <param name="errMsg">[OUT]错误信息</param>
            <returns>FTP请求</returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.AddressOperate">
            <summary>
            地址信息模型操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.AddressOperate.GetAllAddressModel">
            <summary>
            获得所有地址模型
            </summary>
            <returns></returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.ModAddress">
            <summary>
            地址信息模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.ModAddress.AddressNumber">
            <summary>
            地址编号
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.ModAddress.CardIssuer">
            <summary>
            发卡机构
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.ModAddress.Domicile">
            <summary>
            籍贯
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ModAddress.#ctor">
            <summary>
            构造函数（错误）
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ModAddress.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="addressNumber">地址编号</param>
            <param name="address">发卡地</param>
            <param name="domicile">籍贯</param>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.EGender">
            <summary>
            性别（正常情况）
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EGender.Error">
            <summary>
            身份证号错误
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EGender.Male">
            <summary>
            男性
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EGender.Female">
            <summary>
            女性
            </summary>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.EGenderExFunction">
            <summary>
            性别枚举扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.EGenderExFunction.CF_GetGender(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取性别
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>性别</returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.EIDNumberType">
            <summary>
            身份证号类型
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EIDNumberType.Error">
            <summary>
            身份证号错误
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EIDNumberType.Digit15">
            <summary>
            15位身份证号
            </summary>
        </member>
        <member name="F:CML.CommonEx.IDNumberEx.EIDNumberType.Digit18">
            <summary>
            18位身份证号
            </summary>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.EIDNumberTypeExFunction">
            <summary>
            身份证号类型枚举扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.EIDNumberTypeExFunction.CF_GetIDNumberType(CML.CommonEx.IDNumberEx.ModIDNumber,System.Boolean)">
            <summary>
            获取身份证号类型
            </summary>
            <param name="idNumber">身份证号模型</param>
            <param name="isVerifyCheckCode">是否验证校检码（18位身份证号特有）</param>
            <returns>身份证号类型</returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.ModIDNumber">
            <summary>
            身份证号模型
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.ModIDNumber.IDNumber">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.ModIDNumber.IsLawful">
            <summary>
            是否合法
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ModIDNumber.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ModIDNumber.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="idNumber">身份证号</param>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.VersionInfo">
            <summary>
            常用工具包身份证号工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.IDNumberEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF">
            <summary>
            身份证号操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetIDNumberType(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取身份证号类型
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>身份证号类型</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetGender(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取性别
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>性别</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetBirthday(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取出生年月日
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>出生年月日</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetSpecialCode(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取验证码
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>验证码（0-9|X|E-Error）</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetCardIssuer(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取发卡机构
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>发卡单位</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetDomicile(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取籍贯
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>籍贯</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetAddressInfo(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取地址信息
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>发卡单位及籍贯</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetAge(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取年龄
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>年龄（-1为身份证号错误）</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetZodiac(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取生肖
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>生肖</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.ExFunction.IDNumberOperateEF.CF_GetConstellation(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取星座
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>星座</returns>
        </member>
        <member name="T:CML.CommonEx.IDNumberEx.IDNumberOperate">
            <summary>
            身份证号操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetIDNumberType(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取身份证号类型
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>身份证号类型</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetGender(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取性别
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>性别</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetBirthday(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取出生年月日
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>出生年月日</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetSpecialCode(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取验证码
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>验证码（0-9|X|E-Error）</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetCardIssuer(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取发卡机构
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>发卡单位</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetDomicile(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取籍贯
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>籍贯</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetAddressInfo(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取地址信息
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>发卡单位及籍贯</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetAge(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取年龄
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>年龄（-1为身份证号错误）</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetZodiac(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取生肖
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>生肖</returns>
        </member>
        <member name="M:CML.CommonEx.IDNumberEx.IDNumberOperate.CF_GetConstellation(CML.CommonEx.IDNumberEx.ModIDNumber)">
            <summary>
            获取星座
            </summary>
            <param name="idNumber">身份证号模型</param>
            <returns>星座</returns>
        </member>
        <member name="T:CML.CommonEx.RegexEx.ENumberVerifyType">
            <summary>
            数值验证类型
            </summary>
        </member>
        <member name="F:CML.CommonEx.RegexEx.ENumberVerifyType.Normal">
            <summary>
            所有数(-∞,+∞)
            </summary>
        </member>
        <member name="F:CML.CommonEx.RegexEx.ENumberVerifyType.Nagtive">
            <summary>
            负数(-∞,0)
            </summary>
        </member>
        <member name="F:CML.CommonEx.RegexEx.ENumberVerifyType.Positive">
            <summary>
            正数(0,+∞)
            </summary>
        </member>
        <member name="F:CML.CommonEx.RegexEx.ENumberVerifyType.NotNagtive">
            <summary>
            非负数[0,+∞)
            </summary>
        </member>
        <member name="F:CML.CommonEx.RegexEx.ENumberVerifyType.NotPositive">
            <summary>
            非正数(-∞,0]
            </summary>
        </member>
        <member name="T:CML.CommonEx.RegexEx.VersionInfo">
            <summary>
            常用工具包正则表达式工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.RegexEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.RegexEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.RegexEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.RegexEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.RegexEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.RegexEx.RegexOperate">
            <summary>
            正则表达式帮助类
            </summary>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsMatch(System.String,System.String)">
            <summary>
            验证字符串是否匹配正则表达式描述的规则
            </summary>
            <param name="input">待验证字符串</param>
            <param name="pattern">正则表达式</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsMatch(System.String,System.String,System.Boolean)">
            <summary>
            验证字符串是否匹配正则表达式描述的规则
            </summary>
            <param name="input">待验证字符串</param>
            <param name="pattern">正则表达式</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsInterger(System.String)">
            <summary>
            验证整数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsInterger(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证整数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsFloat(System.String)">
            <summary>
            验证单精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsFloat(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证单精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsDouble(System.String)">
            <summary>
            验证双精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsDouble(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证双精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsDateTime(System.String)">
            <summary>
            验证日期
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsEmail(System.String)">
            <summary>
            验证Email字符串
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsTelePhoneNumber(System.String)">
            <summary>
            验证固定电话号码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsMobilePhoneNumber(System.String)">
            <summary>
            验证手机号码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsPhoneNumber(System.String)">
            <summary>
            验证电话号码 [可以是固定电话号码或手机号码]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsZipCode(System.String)">
            <summary>
            验证邮政编码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsIPv4(System.String)">
            <summary>
            验证IPv4地址
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsIPv6(System.String)">
            <summary>
            验证IPv6地址
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsMacAddress(System.String)">
            <summary>
            验证Mac地址 [分隔符:或者-]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsIDCard(System.String,System.Boolean)">
            <summary>
            验证身份证号
            </summary>
            <param name="input">待验证的字符串</param>
            <param name="isVerifyCheckCode">是否验证校检码（18位身份证号特有）</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsIDCard15(System.String)">
            <summary>
            验证一代身份证号 [15位数]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsIDCard18(System.String,System.Boolean)">
            <summary>
            验证二代身份证号 [18位数，GB11643-1999标准]
            </summary>
            <param name="input">待验证的字符串</param>
            <param name="isVerifyCheckCode">是否验证校检码</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsLongitude(System.String)">
            <summary>
            验证经度 [范围为-180～180，小数位数1-5位]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.RegexOperate.CF_IsLatitude(System.String)">
            <summary>
            验证纬度 [范围为-90～90，小数位数1-5位]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="T:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF">
            <summary>
            正则表达式帮助类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsMatch(System.String,System.String)">
            <summary>
            验证字符串是否匹配正则表达式描述的规则
            </summary>
            <param name="input">待验证字符串</param>
            <param name="pattern">正则表达式</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsMatch(System.String,System.String,System.Boolean)">
            <summary>
            验证字符串是否匹配正则表达式描述的规则
            </summary>
            <param name="input">待验证字符串</param>
            <param name="pattern">正则表达式</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsInterger(System.String)">
            <summary>
            验证整数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsInterger(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证整数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsFloat(System.String)">
            <summary>
            验证单精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsFloat(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证单精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsDouble(System.String)">
            <summary>
            验证双精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsDouble(System.String,CML.CommonEx.RegexEx.ENumberVerifyType)">
            <summary>
            验证双精度浮点数
            </summary>
            <param name="input">待验证字符串</param>
            <param name="type">数值验证类型</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsDateTime(System.String)">
            <summary>
            验证日期
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsEmail(System.String)">
            <summary>
            验证Email字符串
            </summary>
            <param name="input">待验证字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsTelePhoneNumber(System.String)">
            <summary>
            验证固定电话号码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsMobilePhoneNumber(System.String)">
            <summary>
            验证手机号码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsPhoneNumber(System.String)">
            <summary>
            验证电话号码 [可以是固定电话号码或手机号码]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsZipCode(System.String)">
            <summary>
            验证邮政编码
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsIPv4(System.String)">
            <summary>
            验证IPv4地址 [第一位和最后一位数字不能是0或255，允许用0补位]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsIPv6(System.String)">
            <summary>
            验证IPv6地址
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsMacAddress(System.String)">
            <summary>
            验证Mac地址 [分隔符:或者-]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsIDCard(System.String)">
            <summary>
            验证身份证号
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsIDCard15(System.String)">
            <summary>
            验证一代身份证号 [15位数]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsIDCard18(System.String)">
            <summary>
            验证二代身份证号 [18位数，GB11643-1999标准]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsLongitude(System.String)">
            <summary>
            验证经度 [范围为-180～180，小数位数1-5位]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:CML.CommonEx.RegexEx.ExFunction.RegexOperateEF.CF_IsLatitude(System.String)">
            <summary>
            验证纬度 [范围为-90～90，小数位数1-5位]
            </summary>
            <param name="input">待验证的字符串</param>
            <returns>验证结果</returns>
        </member>
        <member name="T:CML.CommonEx.ResultEx.VersionInfo">
            <summary>
            常用工具包泛型结果版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.ResultEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.ResultEx.TResult`1">
            <summary>
            泛型操作结果类
            </summary>
            <typeparam name="T">结果类型</typeparam>
        </member>
        <member name="P:CML.CommonEx.ResultEx.TResult`1.Result">
            <summary>
            泛型结果数据
            </summary>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.GetExceptionString(System.Exception)">
            <summary>
            获得异常信息字符串
            </summary>
            <param name="exception">异常对象</param>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.#ctor(`0)">
            <summary>
            构造成功操作结果
            </summary>
            <param name="result">结果数据</param>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.#ctor(`0,System.String)">
            <summary>
            构造失败操作结果（错误代码为-1）
            </summary>
            <param name="result">结果数据</param>
            <param name="errMsg">错误描述</param>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.#ctor(`0,System.Exception)">
            <summary>
            构造失败操作结果（错误代码为-1）
            </summary>
            <param name="result">结果数据</param>
            <param name="exception">异常信息对象</param>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.#ctor(`0,System.Int32,System.String)">
            <summary>
            构造操作结果
            </summary>
            <param name="result">结果数据</param>
            <param name="errCode">错误代码(0代表调用成功)</param>
            <param name="errMsg">错误描述</param>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.#ctor(`0,System.Enum)">
            <summary>
            构造操作结果
            </summary>
            <param name="result">结果数据</param>
            <param name="errEnum">描述枚举（取数值与描述）</param>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.ToString">
            <summary>
            重写ToString方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResult`1.op_LogicalNot(CML.CommonEx.ResultEx.TResult{`0})">
            <summary>
            重载!操作符
            </summary>
            <param name="result">操作结果</param>
            <returns></returns>
        </member>
        <member name="T:CML.CommonEx.ResultEx.TResultBase">
            <summary>
            操作结果基类
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.TResultBase.IsSuccess">
            <summary>
            是否调用成功
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.TResultBase.ErrorCode">
            <summary>
            错误代码(0代表调用成功)
            </summary>
        </member>
        <member name="P:CML.CommonEx.ResultEx.TResultBase.ErrorMessage">
            <summary>
            错误描述
            </summary>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResultBase.#ctor">
            <summary>
            构造操作成功结果
            </summary>
        </member>
        <member name="M:CML.CommonEx.ResultEx.TResultBase.#ctor(System.Int32,System.String)">
            <summary>
            构造操作结果
            </summary>
            <param name="errCode">错误代码</param>
            <param name="errMsg">错误描述</param>
        </member>
        <member name="T:CML.CommonEx.SingletonEx.VersionInfo">
            <summary>
            常用工具包单实例工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.SingletonEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.SingletonEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.SingletonEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.SingletonEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.SingletonEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.SingletonEx.SingletonBase`1">
            <summary>
            单实例类基类
            </summary>
            <typeparam name="T">类</typeparam>
        </member>
        <member name="F:CML.CommonEx.SingletonEx.SingletonBase`1.m_instance">
            <summary>
            单例对象
            </summary>
        </member>
        <member name="F:CML.CommonEx.SingletonEx.SingletonBase`1.m_sysLock">
            <summary>
            系统锁
            </summary>
        </member>
        <member name="P:CML.CommonEx.SingletonEx.SingletonBase`1.CP_Instance">
            <summary>
            获得单例对象
            </summary>
            <returns>单例对象</returns>
        </member>
        <member name="T:CML.CommonEx.ThreadEx.VersionInfo">
            <summary>
            常用工具包线程操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.ThreadEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ThreadEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.ThreadEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.ThreadEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.ThreadEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.ThreadEx.InvokeOperate">
            <summary>
            委托操作类
            </summary>
        </member>
        <member name="M:CML.CommonEx.ThreadEx.InvokeOperate.CF_InvokeUI(System.Windows.Forms.Control,System.Action,System.Boolean)">
            <summary>
            多线程更新UI
            </summary>
            <param name="control">委托控件</param>
            <param name="action">委托操作</param>
            <param name="isThrowException">是否抛出异常</param>
        </member>
        <member name="T:CML.CommonEx.ThreadEx.ExFunction.InvokeOperateEF">
            <summary>
            委托操作类(扩展方法)
            </summary>
        </member>
        <member name="M:CML.CommonEx.ThreadEx.ExFunction.InvokeOperateEF.CF_InvokeUI(System.Windows.Forms.Control,System.Action,System.Boolean)">
            <summary>
            多线程更新UI
            </summary>
            <param name="control">委托控件</param>
            <param name="action">委托操作</param>
            <param name="isThrowException">是否抛出异常</param>
        </member>
        <member name="T:CML.CommonEx.UIAutomationEx.ECheckBoxStatus">
            <summary>
            复选框状态
            </summary>
        </member>
        <member name="F:CML.CommonEx.UIAutomationEx.ECheckBoxStatus.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:CML.CommonEx.UIAutomationEx.ECheckBoxStatus.On">
            <summary>
            已选中
            </summary>
        </member>
        <member name="F:CML.CommonEx.UIAutomationEx.ECheckBoxStatus.Off">
            <summary>
            未选中
            </summary>
        </member>
        <member name="F:CML.CommonEx.UIAutomationEx.ECheckBoxStatus.Indeterminate">
            <summary>
            不确定
            </summary>
        </member>
        <member name="T:CML.CommonEx.UIAutomationEx.ECheckBoxStatusExFunction">
            <summary>
            复选框状态枚举扩展方法
            </summary>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ECheckBoxStatusExFunction.CF_IsError(CML.CommonEx.UIAutomationEx.ECheckBoxStatus)">
            <summary>
            复选框状态是否获取错误
            </summary>
            <param name="checkBoxStatus">复选框状态</param>
            <returns>获取结果</returns>
        </member>
        <member name="T:CML.CommonEx.UIAutomationEx.VersionInfo">
            <summary>
            常用工具包UI自动化操作工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.UIAutomationEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.UIAutomationEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.UIAutomationEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.UIAutomationEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.UIAutomationEx.UIAutomationOperate">
            <summary>
            UI自动化操作类
            【引用】UIAutomationClient
            【引用】UIAutomationTypes
            【引用】UIAutomationProvider
            </summary>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_StartProgram(System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_StartProgram(System.String,System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <param name="args">启动参数</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_StartProgram(System.String,System.String,System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <param name="args">启动参数</param>
            <param name="workPath">工装路径</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetAllElements">
            <summary>
            获得根元素下的所有元素
            </summary>
            <returns>元素合集</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementCollection(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope)">
            <summary>
            获取窗体元素下的元素合集
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <returns>元素合集</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetRootElement">
            <summary>
            获取根元素
            </summary>
            <returns>根元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByProcess(System.Diagnostics.Process)">
            <summary>
            通过进程获取元素
            </summary>
            <param name="process">进程</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByPId(System.Int32)">
            <summary>
            通过进程ID获取元素
            </summary>
            <param name="pid">进程ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetFirstElement(System.Windows.Automation.AutomationElement)">
            <summary>
            获取窗体元素下的第一个元素
            </summary>
            <param name="element">窗体元素</param>
            <returns>第一个元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetFirstElement(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope)">
            <summary>
            获取窗体元素下的第一个元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <returns>第一个元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByIndex(System.Windows.Automation.AutomationElement,System.Int32)">
            <summary>
            通过序列ID获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="index">序列ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByIndex(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Int32)">
            <summary>
            通过序列ID获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="index">序列ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByAutomationId(System.Windows.Automation.AutomationElement,System.String)">
            <summary>
            通过内部名称获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="automationId">内部名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByAutomationId(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.String)">
            <summary>
            通过内部名称获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="automationId">内部名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByTypeName(System.Windows.Automation.AutomationElement,System.Windows.Automation.ControlType,System.String)">
            <summary>
            通过元素类型和元素名称获取元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="controlType">元素类型</param>
            <param name="elementName">元素名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetElementByTypeName(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.ControlType,System.String)">
            <summary>
            通过元素类型和元素名称获取元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="controlType">元素类型</param>
            <param name="elementName">元素名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetNameContent(System.Windows.Automation.AutomationElement)">
            <summary>
            获取元素Name属性内容
            </summary>
            <param name="element">元素</param>
            <returns>Name属性</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetTextContent(System.Windows.Automation.AutomationElement)">
            <summary>
            获取文本框元素文本内容
            </summary>
            <param name="element">文本框元素</param>
            <returns>文本内容</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_SetTextContent(System.Windows.Automation.AutomationElement,System.String,System.Int32)">
            <summary>
            设置文本框元素文本内容
            </summary>
            <param name="element">文本框元素</param>
            <param name="content">文本内容</param>
            <param name="delay">Focus延时[单位:MS|默认:100MS]</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetCheckBoxStatu(System.Windows.Automation.AutomationElement)">
            <summary>
            获取复选框元素选择状态
            </summary>
            <param name="element">复选框元素</param>
            <returns>选择状态</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_SetCheckBoxStatu(System.Windows.Automation.AutomationElement,System.Boolean)">
            <summary>
            设置复选框元素选择状态
            </summary>
            <param name="element">复选框元素</param>
            <param name="statu">选择状态</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_GetSelectListItem(System.Windows.Automation.AutomationElement)">
            <summary>
            获取下拉列表选择项
            </summary>
            <param name="element">下拉列表元素</param>
            <returns>列表项元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_SetSelectListItem(System.Windows.Automation.AutomationElement)">
            <summary>
            设置下拉列表选择项
            </summary>
            <param name="element">列表项元素</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_ClickButton(System.Windows.Automation.AutomationElement)">
            <summary>
            单击按钮
            </summary>
            <param name="element">按钮元素</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_SendCommand(System.Windows.Automation.AutomationElement,System.String,System.Int32)">
            <summary>
            对指定元素发送命令
            </summary>
            <param name="element">元素</param>
            <param name="command">命令</param>
            <param name="delay">Focus延时[单位:MS|默认:100MS]</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_DelayMillisecond(System.Int32)">
            <summary>
            延时等待（毫秒）
            </summary>
            <param name="millisecond">延时毫秒数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_DelaySecond(System.Int32)">
            <summary>
            延时等待（秒）
            </summary>
            <param name="second">延时秒数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_DelayMinute(System.Int32)">
            <summary>
            延时等待（分钟）
            </summary>
            <param name="minute">延时分钟数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.UIAutomationOperate.CF_DelayHour(System.Int32)">
            <summary>
            延时等待（小时）
            </summary>
            <param name="hour">延时小时数</param>
        </member>
        <member name="T:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF">
            <summary>
            UI自动化操作类(扩展方法)
            【引用】UIAutomationClient
            【引用】UIAutomationTypes
            【引用】UIAutomationProvider
            </summary>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_StartProgram(System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_StartProgram(System.String,System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <param name="args">启动参数</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_StartProgram(System.String,System.String,System.String)">
            <summary>
            启动应用程序
            </summary>
            <param name="progPath">应用程序路径</param>
            <param name="args">启动参数</param>
            <param name="workPath">工装路径</param>
            <returns>进程变量</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetAllElements">
            <summary>
            获得根元素下的所有元素
            </summary>
            <returns>元素合集</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementCollection(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope)">
            <summary>
            获取窗体元素下的元素合集
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <returns>元素合集</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetRootElement">
            <summary>
            获取根元素
            </summary>
            <returns>根元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByProcess(System.Diagnostics.Process)">
            <summary>
            通过进程获取元素
            </summary>
            <param name="process">进程</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByPId(System.Int32)">
            <summary>
            通过进程ID获取元素
            </summary>
            <param name="pid">进程ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetFirstElement(System.Windows.Automation.AutomationElement)">
            <summary>
            获取窗体元素下的第一个元素
            </summary>
            <param name="element">窗体元素</param>
            <returns>第一个元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetFirstElement(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope)">
            <summary>
            获取窗体元素下的第一个元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <returns>第一个元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByIndex(System.Windows.Automation.AutomationElement,System.Int32)">
            <summary>
            通过序列ID获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="index">序列ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByIndex(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Int32)">
            <summary>
            通过序列ID获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="index">序列ID</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByAutomationId(System.Windows.Automation.AutomationElement,System.String)">
            <summary>
            通过内部名称获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="automationId">内部名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByAutomationId(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.String)">
            <summary>
            通过内部名称获取窗体元素下的元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="automationId">内部名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByTypeName(System.Windows.Automation.AutomationElement,System.Windows.Automation.ControlType,System.String)">
            <summary>
            通过元素类型和元素名称获取元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="controlType">元素类型</param>
            <param name="elementName">元素名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetElementByTypeName(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.ControlType,System.String)">
            <summary>
            通过元素类型和元素名称获取元素
            </summary>
            <param name="element">窗体元素</param>
            <param name="treeScope">遍历模式</param>
            <param name="controlType">元素类型</param>
            <param name="elementName">元素名称</param>
            <returns>元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetNameContent(System.Windows.Automation.AutomationElement)">
            <summary>
            获取元素Name属性内容
            </summary>
            <param name="element">元素</param>
            <returns>Name属性</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetTextContent(System.Windows.Automation.AutomationElement)">
            <summary>
            获取文本框元素文本内容
            </summary>
            <param name="element">文本框元素</param>
            <returns>文本内容</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_SetTextContent(System.Windows.Automation.AutomationElement,System.String,System.Int32)">
            <summary>
            设置文本框元素文本内容
            </summary>
            <param name="element">文本框元素</param>
            <param name="content">文本内容</param>
            <param name="delay">Focus延时[单位:MS|默认:100MS]</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetCheckBoxStatu(System.Windows.Automation.AutomationElement)">
            <summary>
            获取复选框元素选择状态
            </summary>
            <param name="element">复选框元素</param>
            <returns>选择状态</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_SetCheckBoxStatu(System.Windows.Automation.AutomationElement,System.Boolean)">
            <summary>
            设置复选框元素选择状态
            </summary>
            <param name="element">复选框元素</param>
            <param name="statu">选择状态</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_GetSelectListItem(System.Windows.Automation.AutomationElement)">
            <summary>
            获取下拉列表选择项
            </summary>
            <param name="element">下拉列表元素</param>
            <returns>列表项元素</returns>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_SetSelectListItem(System.Windows.Automation.AutomationElement)">
            <summary>
            设置下拉列表选择项
            </summary>
            <param name="element">列表项元素</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_ClickButton(System.Windows.Automation.AutomationElement)">
            <summary>
            单击按钮
            </summary>
            <param name="element">按钮元素</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_SendCommand(System.Windows.Automation.AutomationElement,System.String,System.Int32)">
            <summary>
            对指定元素发送命令
            </summary>
            <param name="element">元素</param>
            <param name="command">命令</param>
            <param name="delay">Focus延时[单位:MS|默认:100MS]</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_DelayMillisecond(System.Int32)">
            <summary>
            延时等待（毫秒）
            </summary>
            <param name="millisecond">延时毫秒数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_DelaySecond(System.Int32)">
            <summary>
            延时等待（秒）
            </summary>
            <param name="second">延时秒数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_DelayMinute(System.Int32)">
            <summary>
            延时等待（分钟）
            </summary>
            <param name="minute">延时分钟数</param>
        </member>
        <member name="M:CML.CommonEx.UIAutomationEx.ExFunction.UIAutomationOperateEF.CF_DelayHour(System.Int32)">
            <summary>
            延时等待（小时）
            </summary>
            <param name="hour">延时小时数</param>
        </member>
        <member name="T:CML.CommonEx.VersionEx.VersionInfo">
            <summary>
            常用工具包版本管控工具版本信息
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionInfo.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionInfo.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionInfo.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionInfo.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.VersionEx.VersionInfo.CF_GetVersionInfo">
            <summary>
            获得版本信息
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="T:CML.CommonEx.VersionEx.VersionBase">
            <summary>
            版本控制基类
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionBase.CP_VerMain">
            <summary>
            主版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionBase.CP_VerDev">
            <summary>
            研发版本号
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionBase.CP_VerDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CML.CommonEx.VersionEx.VersionBase.CP_RunAssembly">
            <summary>
            当前程序集 
            </summary>
        </member>
        <member name="M:CML.CommonEx.VersionEx.VersionBase.CF_GetVersionInfo(System.String)">
            <summary>
            获得版本信息
            </summary>
            <param name="file">嵌入资源路径</param>
            <returns>版本信息</returns>
        </member>
        <member name="M:CML.CommonEx.VersionEx.VersionBase.GetUpdateInfo(System.String)">
            <summary>
            获取升级记录
            </summary>
            <param name="file">嵌入资源路径</param>
            <returns>更新记录</returns>
        </member>
    </members>
</doc>
